name: activity

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest  # ใช้ runner ที่มีอยู่
    strategy:
      matrix:
        os: [ubuntu, debian, centos]  # ใช้ชื่อที่ไม่มี colon
        node-version: [18, 20, 22]

    steps:
      - name: Check out code
        uses: actions/checkout@v4  # ตรวจสอบโค้ดจาก repository

      - name: Set up Node.js in Docker
        run: |
          if [ "${{ matrix.os }}" = "ubuntu" ]; then
            docker run --rm -v ${{ github.workspace }}:/app -w /app node:${{ matrix.node-version }} /bin/sh -c "
              npm ci && npm test  # ติดตั้ง dependencies และรัน test suite
            "
          elif [ "${{ matrix.os }}" = "debian" ]; then
            docker run --rm -v ${{ github.workspace }}:/app -w /app debian:latest /bin/sh -c "
              apt-get update && apt-get install -y curl && \
              curl -fsSL https://deb.nodesource.com/setup_${{ matrix.node-version }}.x | bash - && \
              apt-get install -y nodejs && \
              npm ci && npm test  # ติดตั้ง Node.js และรัน test suite
            "
          elif [ "${{ matrix.os }}" = "centos" ]; then
            docker run --rm -v ${{ github.workspace }}:/app -w /app centos:latest /bin/sh -c "
              yum install -y curl && \
              curl -fsSL https://rpm.nodesource.com/setup_${{ matrix.node-version }}.x | bash - && \
              yum install -y nodejs && \
              npm ci && npm test  # ติดตั้ง Node.js และรัน test suite
            "
          fi
